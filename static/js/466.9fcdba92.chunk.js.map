{"version":3,"file":"static/js/466.9fcdba92.chunk.js","mappings":"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","sources":["Components/Login.jsx","redux/selectors.js","Components/CartProductDetal.jsx","pages/Cart.jsx"],"sourcesContent":["import  { useState ,useEffect} from 'react';\r\n\r\nimport {Modal,CloseButton }from 'react-bootstrap';\r\n\r\nimport '../style/header.scss'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport default function Login({button}) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n \r\n\r\n  return (\r\n    <div className='card-login'>\r\n      {button ? \r\n      <button  onClick={handleShow}>\r\n        <img src=\"https://www.coolmate.me/images/header/icon-account.svg\" alt=\"\" />\r\n      </button>      \r\n      :\r\n      <button  onClick={handleShow}className=\"button-login--now\" >Đăng nhập ngay</button>\r\n}\r\n      \r\n      <Modal show={show} onHide={handleClose}>\r\n        <div className='login-top'>\r\n          <div className=' login-title'>\r\n            <h2 className='title'>Đăng nhập</h2>\r\n            <CloseButton className='close-button' onClick={handleClose}/>\r\n          </div>\r\n          <span>Nếu đã từng mua hàng trên Website trước đây,\r\n             bạn có thể dùng tính năng  <a href=\"\">\"Lấy mật khẩu\"</a> để có thể truy cập vào tài khoản bằng email nhé. </span>\r\n        </div>        \r\n        \r\n                        \r\n                        <div className=\"account\">\r\n                            <input type=\"text\" className=\"input_account\" placeholder='Email/SDT của bạn' />\r\n                        </div>\r\n                        <div className=\"account\">\r\n                            <input type=\"text\" className=\"input_account\" placeholder='Mật khẩu' />\r\n                        </div>\r\n                        <div className=\"button_login\">\r\n                            <button className=\"text_button_login\">\r\n                                Đăng nhập\r\n                            </button>\r\n                        </div>\r\n                        <p className=\"or\">Hoặc</p>\r\n                        <div className=\"button_login_facebook\">\r\n                            <button className=\"login_facebook\">\r\n                                <p className=\"text_login\">Đăng nhập với Facebook <i className=\"fa-brands fa-facebook icon_login\" /></p>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"button_login_google\">\r\n                            <button className=\"login_Google\">\r\n                                <p className=\"text_login\">Đăng nhập với Google <i className=\"fa-brands fa-google icon_login\" /></p>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"footer_login\">\r\n                            <p className=\"new_account\">Đăng ký tài khoản mới</p>\r\n                            <p className=\"new_account\">Quên mật khẩu</p>\r\n                        </div>\r\n                    \r\n        \r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","export const cartProductSelector = (state) => state.cart;\r\n","import {Row,Col } from 'react-bootstrap';\r\nimport { useState ,useEffect} from 'react';\r\nimport { useSelector ,useDispatch} from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport cartSlice from \"../redux/slices/cartSlice\";\r\n\r\n\r\n export default function CartProductDetal({product}){\r\n    console.log(product);\r\n    const dispatch =useDispatch()\r\n    const [quantity, setQuantity] = useState(product.quantity)\r\n    const [color, setColor] = useState(product.color)\r\n    const [size, setSize] = useState(product.size)\r\n    const [del, setDel] = useState(false)\r\n    \r\n\r\n    const updateQuantity = (type) => {\r\n        if (type === 'plus') {\r\n            setQuantity(quantity + 1)\r\n        } else {\r\n            setQuantity(quantity - 1 < 1 ? 1 : quantity - 1)\r\n        }     \r\n        }\r\n   const deleteProduct = () => {\r\n        (dispatch(\r\n            cartSlice.actions.deleteProduct({\r\n              id:product.id,\r\n              quantity: quantity\r\n            })))\r\n     }\r\n        \r\n            \r\n        \r\n    useEffect(() => {\r\n        (dispatch(\r\n            cartSlice.actions.updateProduct({\r\n              color: color,\r\n              size: size,\r\n              quantity: quantity,                        \r\n              id:product.id,\r\n              product:product.product,                \r\n\r\n            })))\r\n        \r\n    },[quantity,color,size])\r\n\r\n  \r\n    \r\n    return( \r\n         product.id &&\r\n         \r\n            <Row className='product-cart-detail'>\r\n               \r\n                <Col xs={5}  sm= {5} md={6}  lg={5}  xl={5} xxl={4}  className='product-img'>\r\n                    <img src={product.product.linkImages[1]} alt={product.product.ductName} />\r\n                <Link to={`/product/${product.product.id}`}> </Link>\r\n                </Col>\r\n                <Col xs={7}  sm= {7} md={6}  lg={7}  xl={7} xxl={8} className='product-detail-right'>\r\n                    <div className='product-detail-top'>\r\n                        <div className='product-detail-text'>\r\n                        <Link to={`/product/${product.product.id}`}>\r\n                            <div className='product-detail-name'>\r\n                                \r\n                                {product.product.ductName}\r\n                            </div>\r\n                        </Link>\r\n                        \r\n                        <button className='button-delete' onClick={deleteProduct}>X</button>\r\n\r\n                        </div>\r\n                        \r\n                        <div className='product-detail-selected'>\r\n                            <i>{color} / {size}</i> \r\n                        </div>\r\n                    </div>\r\n                    <div className='product-detail-bottom'>\r\n                        <div className='select-color-size'>\r\n                            <select\r\n                                value={color}\r\n                                onChange={(e) => setColor(e.target.value)}\r\n                                className='select'\r\n                            >\r\n                                {product.product.listColor.map((option) => (\r\n                                <option key={option} value={option}>{option}</option>\r\n                                ))}\r\n                            </select>\r\n                            <select\r\n                                value={size}\r\n                                onChange={(e) => setSize(e.target.value)}\r\n                                className='select'\r\n                            >\r\n                                {product.product.listSize.map((option) => (\r\n                                <option key={option} value={option}>{option}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className='quantity-price'>\r\n                            <div className=\"product-quantity-change\">\r\n                                <button className=\"product-quantity-down\" onClick={() => updateQuantity('minus')}>\r\n                                -\r\n                                </button>\r\n                                <span className=\"quantity-buy\">\r\n                                    {quantity}\r\n                                </span>\r\n                                <button className=\"product-quantity-up\" onClick={() => updateQuantity('plus')}>\r\n                                    +\r\n                                </button>\r\n\r\n                            </div>\r\n                            <div className='price'>\r\n                                <span>{Math.round(product.product.price*(1-(product.product.discount/100))*quantity)}.000 đ</span>\r\n                                {product.product.discount&&<i><strike>{product.product.price*quantity}.000 đ</strike> </i>}\r\n                            </div>\r\n                        </div>\r\n                       \r\n                        \r\n                       \r\n                    </div>\r\n                    \r\n                </Col>\r\n        </Row>\r\n\r\n         \r\n        \r\n    )\r\n}","\r\nimport {Row,Col } from 'react-bootstrap';\r\nimport Login from '../Components/Login';\r\nimport { useState ,useEffect} from 'react';\r\nimport { useSelector ,useDispatch} from \"react-redux\";\r\nimport { cartProductSelector } from \"../redux/selectors\";\r\nimport cartSlice from \"../redux/slices/cartSlice\";\r\nimport address from '../assets/address.json';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\n\r\nimport CartProductDetal from '../Components/CartProductDetal';\r\n\r\n\r\nimport '../style/cart.scss'\r\n\r\nconst Cart = () => {  \r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        handleSubmit\r\n      } = useForm({\r\n        criteriaMode: \"all\"\r\n      });\r\n    const onSubmit = (data) => console.log(data);  \r\n    \r\n    const cartProductData = useSelector(cartProductSelector);\r\n    const cartProduct = cartProductData.cartItems\r\n    const [sumMoney, setSumMoney] = useState()\r\n\r\n\r\n    \r\n    const [province, setProvince] = useState()\r\n    const [district, setDistrict] = useState()\r\n    const [ward, setWard] = useState()\r\n    const [dataDistricts, setDataDistricts] = useState([{\"Id\":\"00001\",\"Name\":\"Chọn quận/huyện\"}])\r\n    const [dataWards, setDataWards] = useState([{\"Id\":\"00001\",\"Name\":\"Chọn phường xã\"}])\r\n    \r\n    useEffect(() => {\r\n        if(province &&province!=\"Chọn tỉnh/thành phố\" ){\r\n            var distric =address.filter(addres =>addres.Name == province)[0].districts;\r\n            \r\n            setDataDistricts([{\"Id\":\"00001\",\"Name\":\"Chọn quận/huyện\"},...distric]) \r\n            setDataWards([{\"Id\":\"00001\",\"Name\":\"Chọn phường xã\"}])\r\n        }else{\r\n            setDataDistricts([{\"Id\":\"00001\",\"Name\":\"Chọn quận/huyện\"}]) \r\n            setDataWards([{\"Id\":\"00001\",\"Name\":\"Chọn phường xã\"}])\r\n\r\n        }\r\n           \r\n        \r\n        },[province]) \r\n\r\n    useEffect(() => {      \r\n        if(district && dataDistricts.length > 1)  \r\n        { const wards = dataDistricts.filter(item =>item.Name === district)[0].wards\r\n            setDataWards(wards)}\r\n        },[district]) \r\n        \r\n\r\n   \r\n    \r\n    const listPayments=[\r\n        {\r\n            id:1,\r\n            name:\"COD\",\r\n            content:[\"COD\",\"Thanh toán khi nhận hàng\"],\r\n            linkImg:\"https://www.coolmate.me/images/COD.svg\"\r\n        },\r\n        {\r\n            id:2,\r\n            name:\"MoMo\",\r\n            content:[\"Thanh Toán MoMo\"],\r\n            linkImg:\"https://www.coolmate.me/images/momo-icon.png\"\r\n        },\r\n        {\r\n            id:3,\r\n            name:\"ZaloPay\",\r\n            content:[\"Ví điện tử ZaloPay\"],\r\n            linkImg:\"https://www.coolmate.me/images/logo-zalopay.svg\"\r\n        },\r\n        {\r\n            id:4,\r\n            name:\"ShopeePay\",\r\n            content:[\"Ví điện tử ZaloPay\"],\r\n            sale:\"Giảm thêm 50k cho khách hàng lần đầu mở ví và thanh toán bằng ShopeePay\",\r\n            linkImg:\"https://mcdn.coolmate.me/image/September2021/195dbf69c0ac36f26fbd_(1).png\"\r\n        },\r\n        {\r\n            id:5,\r\n            name:\"VNPAY\",\r\n            content:[\"Thẻ ATM / Internet Banking\",\"Thẻ tín dụng (Credit card) / Thẻ ghi nợ (Debit card)\",\"VNPay QR\"],\r\n            linkImg:\"https://www.coolmate.me/images/vnpay.png\"\r\n        },\r\n        {\r\n            id:6,\r\n            name:\"9PAY\",\r\n            content:[\"Ví điện tử 9Pay\"],\r\n            linkImg:\"https://mcdn.coolmate.me/uploads/May2022/9pay.svg\"\r\n        }\r\n    ]\r\n    const [payment, setPayment] = useState( listPayments[0])\r\n    function sum (cartProduct){\r\n        let sumMoney = 0;\r\n        for (let i = 1; i < cartProduct.length; i++){\r\n            \r\n            sumMoney += Math.round(cartProduct[i].product.price*(1-(cartProduct[i].product.discount/100))*cartProduct[i].quantity);\r\n        }\r\n       \r\n        return sumMoney;\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        setSumMoney(sum(cartProduct))\r\n    },[cartProduct]) \r\n    function ErrorForm({name} ){\r\n        return(\r\n          <ErrorMessage\r\n            errors={errors}\r\n            name={name}\r\n            render={({ messages }) => {\r\n              return messages\r\n                ? Object.entries(messages).map(([type, message]) => (\r\n                    <p key={type}>{message}</p>\r\n                  ))\r\n                : null;\r\n            }}\r\n          />\r\n        )\r\n        \r\n      }\r\n    \r\n\r\n    function Payments({item}){\r\n        return(\r\n            <button             \r\n            className={`payments-child  ${item.id ==payment.id ? 'active' : ''}`}\r\n            onClick={()=>setPayment(item)}\r\n            >\r\n                \r\n                   \r\n                    <div className='payments-child-conten'>\r\n                        <span className={`${item.id ==payment.id ? 'active-button' : ''}`}>&#8192; </span>\r\n                        <img src={item.linkImg} alt= {item.content} className='img-check'/>\r\n                        <div className='payments-content'>\r\n                        {item.content.map((item) =>{\r\n                            return <div className='payments-title' key={item}>{item}</div>\r\n                        })}\r\n                        {item.sale?<i className='payments-sale'>{item.sale}</i>:null}\r\n                        </div>\r\n                    </div>\r\n                \r\n         </button>  \r\n        )}\r\n  \r\n\r\n\r\n\r\n    return(\r\n        <Row className=\"cart-product\">\r\n            \r\n            <Col  md={12} xl={7}  className='cart-left'>\r\n                <Row className='shipping-information'>\r\n                    <Col  className='title-shipping' >\r\n                        Thông tin vận chuyển\r\n                    </Col>\r\n                    <Col  className='title-shipping--right'>\r\n                    <span>Bạn đã có tài khoản ?</span>\r\n                    <Login/>\r\n                    </Col>\r\n                </Row>\r\n                <form onSubmit={handleSubmit(onSubmit) }>\r\n                    <Row >\r\n                        <Col md={12} xl={6} > \r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Họ và tên\" \r\n                                className=\"buyer-information\" \r\n                                {...register(\"Name\", \r\n                                {required: \"Vui lòng  nhập đủ thông tin.\" ,\r\n                                minLength: {\r\n                                value: 6,\r\n                                message: \"Tên tối thiểu 6 kí tự \"\r\n                                }})} \r\n                            />\r\n                            <ErrorForm name=\"Name\"/>\r\n                            \r\n                        </Col>\r\n                        <Col md={12} xl={6} >\r\n                            <input\r\n                \r\n                                placeholder=\"Số điện thoại người nhận\" \r\n                                className=\"buyer-information\"\r\n                                {...register(\"mobileNumber\", {\r\n                                    required: \"Vui lòng  nhập đủ thông tin.\",\r\n                                    \r\n                                    pattern: {\r\n                                    value: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\r\n                                    message: \"Vui lòng kiểm tra lại số điện thoại.\"\r\n                                    }\r\n                                })}\r\n                                />\r\n                                <ErrorForm name=\"mobileNumber\"/>\r\n                        </Col>\r\n                    </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                     <input\r\n                        type=\"text\" \r\n                        placeholder=\"Email\" \r\n                        className=\"buyer-information \"\r\n                        {...register(\"Email\", {\r\n                            required: \"Vui lòng  nhập đủ thông tin.\",\r\n                            pattern: {\r\n                            value: /^\\S+@\\S+$/i,\r\n                            message: \"Vui lòng nhập đúng .\"\r\n                            }\r\n                        })}\r\n                        />\r\n                        <ErrorForm name=\"Email\"/>\r\n                    </Col>\r\n\r\n                </Row>   \r\n\r\n                <Row className='choose-addres'>\r\n                    \r\n                \r\n                    <Col>\r\n                            <select\r\n                                value={province}\r\n                                onChange={(e) => setProvince(e.target.value)}\r\n                                className='choose-addres-child'\r\n                               \r\n                            >\r\n                                {address.map((province) => (\r\n                                <option key={province.Id} value={province.Name}>{province.Name}</option>\r\n                                ))}\r\n                            </select>\r\n                    </Col>\r\n                    <Col>\r\n                        <select\r\n                          value={district}\r\n                          onChange={(e) => setDistrict(e.target.value)}\r\n                          className='choose-addres-child'\r\n                        >\r\n                          {dataDistricts && dataDistricts.map((district) => (\r\n                            <option key={district.Id} value={district.Name}>{district.Name}</option>\r\n                             ))}\r\n                        </select>\r\n                    </Col>\r\n                    \r\n                    <Col>\r\n                    {dataWards &&\r\n                        <select\r\n                        value={ward}\r\n                        onChange={(e) => setWard(e.target.value)}\r\n                        className='choose-addres-child'\r\n                      >\r\n                        { dataWards.map((ward) => (\r\n\r\n                          <option key={ward.Id} value={ward.Name}>{ward.Name}</option>\r\n                           ))}\r\n                      </select>\r\n                    }\r\n                    </Col>\r\n                </Row>             \r\n                <Row>\r\n                    \r\n                    <Col>\r\n                     <input\r\n                        type=\"text\" \r\n                        placeholder=\"Địa chỉ:(ví dụ:Số nhà 88 ngõ 8 đường Hạnh Phúc)\" \r\n                        className=\"buyer-information \"\r\n                        {...register(\"Address\", \r\n                            {required: \"Vui lòng  nhập đủ thông tin.\" ,\r\n                            maxLength: {\r\n                            value: 100,\r\n                            message: \"Tên tối đa 100 kí tự\"\r\n                            },\r\n                            minLength: {\r\n                            value: 2,\r\n                            message: \"Tên tối thiểu 5 kí tự \"\r\n                            }})}\r\n                        />\r\n                        <ErrorForm name=\"Address\"/>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                <Col>\r\n                     <input\r\n                        type=\"text\" \r\n                        placeholder=\"Chú ý : (ví dụ:Giao hàng giờ hành chính))\" \r\n                        className=\"buyer-information \"\r\n                        {...register(\"Note\")}\r\n                        />\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <div >\r\n                    <hr />\r\n                <h1 className='title-pay'>Hình thức thanh toán</h1>\r\n                {listPayments.map((payment) =>{\r\n                return (\r\n                    <Payments item={payment} key={payment.id} />\r\n                )\r\n                })}\r\n                </div>\r\n                <Row>\r\n                    <button className='button-pay' type='Sumbit'>\r\n                         Thanh toán {sumMoney != 0 ? sumMoney :\"0\"}\r\n                         .000 đ bằng {payment.name}\r\n                         </button>\r\n                </Row>\r\n                </form>\r\n            </Col>\r\n            <Col  md={12} xl={5} className='cart-right'>\r\n                <div className='title-cart'> Giỏ hàng của bạn</div> \r\n                {cartProductData.cartItems.length > 0 && \r\n                cartProductData.cartItems.map((product,index) =>{      \r\n                               \r\n                    return(\r\n                        <CartProductDetal product={product} key={index.toString()} />\r\n                    )\r\n                })\r\n                }\r\n                \r\n                <div className='bill'>\r\n                    <hr />\r\n                    <div className=' bill-child'>\r\n                        <span>Tính tổng </span>\r\n                        <span>{sumMoney}.000 đ</span>\r\n                    </div>\r\n                    <div className='bill-child'>\r\n                        <span>Giảm giá</span>\r\n                        <span>0 đ</span>\r\n                        \r\n                    </div>\r\n                    <div className='bill-child'>\r\n                        <span>Phí giao hàng</span>\r\n                        <span>Miễn phí</span>\r\n                        \r\n                    </div>\r\n                    <hr />\r\n                    <div className='bill-child'>\r\n                        <span>Tổng tiền thanh toán</span>\r\n                        <span>{sumMoney}.000 đ</span>\r\n                        \r\n                    </div>\r\n\r\n            </div>\r\n\r\n                \r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\nexport default Cart"],"names":["Login","button","useState","show","setShow","handleClose","handleShow","useForm","register","handleSubmit","formState","errors","className","onClick","src","alt","onHide","href","type","placeholder","cartProductSelector","state","cart","CartProductDetal","product","console","log","dispatch","useDispatch","quantity","setQuantity","color","setColor","size","setSize","updateQuantity","useEffect","cartSlice","id","Row","Col","xs","sm","md","lg","xl","xxl","linkImages","ductName","to","value","onChange","e","target","listColor","map","option","listSize","Math","round","price","discount","criteriaMode","cartProductData","useSelector","cartProduct","cartItems","sumMoney","setSumMoney","province","setProvince","district","setDistrict","ward","setWard","dataDistricts","setDataDistricts","dataWards","setDataWards","distric","address","addres","Name","districts","length","wards","filter","item","listPayments","name","content","linkImg","sale","payment","setPayment","ErrorForm","render","messages","Object","entries","message","Payments","i","sum","onSubmit","data","required","minLength","pattern","Id","maxLength","index","toString"],"sourceRoot":""}